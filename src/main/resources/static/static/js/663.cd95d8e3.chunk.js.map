{"version":3,"file":"static/js/663.cd95d8e3.chunk.js","mappings":"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","sources":["api/_models/User.datamodel.js","api/axios_config.js","api/csc/CSC_Controller.js","api/interests/InterestsController.js","api/user/UserController.js","components/models/_partials/selection/CitySelection.js","components/models/_partials/selection/CountrySelection.js","components/models/_partials/selection/StateSelection.js","components/models/signup/process/IdentificationProcess.js","components/models/signup/process/ConfirmationProcess.js","components/models/_partials/selection/InterestSelection.js","components/models/signup/process/AccountProcess.js","components/models/signup/SignupProcess.js"],"sourcesContent":["class UserModel{\r\n    constructor(public_id, firstname, lastname, password, email, age, country, state, city, biography, interests, friendIdList){\r\n        this.public_id = public_id;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n        this.password = password;\r\n        this.email = email;\r\n        this.age = age;\r\n        this.country = country;\r\n        this.state = state;\r\n        this.city = city;\r\n        this.biography = biography;\r\n        this.interests = interests;\r\n        this.friendIdList = friendIdList;\r\n    }\r\n}\r\n\r\nexport default UserModel;","import axios from \"axios\";\r\n\r\n//setup axios\r\naxios.defaults.withCredentials = true;\r\n// axios.defaults.baseURL = \"http://localhost:8081/api/v1/\";\r\n// axios.defaults.xsrfHeaderName = 'X-CSRF-TOKEN';\r\n// axios.defaults.xsrfCookieName = '_csrf';\r\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\n\r\nlet api = axios.create({\r\n    baseURL: \"http://localhost:8081/api/v1/\",\r\n    withCredentials: true,\r\n    xsrfCookieName: '_csrf',\r\n    xsrfHeaderName: 'X-XSRF-TOKEN'\r\n});\r\n\r\napi.defaults.headers.common = {\r\n    'X-XSRF-TOKEN': \r\n        (document.cookie.split(';')\r\n            .map(c => c.trim())\r\n            .filter(c => c.startsWith('XSRF-TOKEN='))[0] || '')\r\n            .replace('XSRF-TOKEN=', '')\r\n        \r\n}\r\n\r\napi.interceptors.response.use((response) => response, (err) => {\r\n    if(err.response === undefined || err.response.status === 403){\r\n        window.location.href = '/login';\r\n    }\r\n    console.log(err);\r\n    throw err;\r\n})\r\n\r\nexport default api;","import api from '../axios_config';\r\n\r\nasync function getAllCountries(){\r\n    return (await api.get('/csc/countries')).data;\r\n}\r\n\r\nasync function getStatesByCountry(ciso2){\r\n    return (await api.get(`/csc/states/${ciso2}`)).data;\r\n}\r\n\r\nasync function getCitiesByState(ciso2, siso2){\r\n    return (await api.get(`/csc/cities/${ciso2}/${siso2}`)).data;\r\n}\r\n\r\nconst cscController = {\r\n    getAllCountries,\r\n    getStatesByCountry,\r\n    getCitiesByState\r\n}\r\n\r\nexport default cscController;\r\n","import api from '../axios_config';\r\n\r\n\r\n//[{id: 1L, interest: 'name'}]\r\nasync function getAllInterests(){\r\n    return (await api.get('/interests')).data;\r\n}\r\n\r\nconst exports = {\r\n    getAllInterests\r\n};\r\n\r\nexport default exports;","import api from \"../axios_config\";\r\nimport UserModel from '../_models/User.datamodel';\r\nimport qs from 'qs';\r\nimport axios from \"axios\";\r\n\r\nfunction convertToUserModel(res){\r\n    return new UserModel(res.public_id, res.firstname, res.lastname, res.password, res.email, res.age, res.country, res.state, res.city, res.biography, res.interests, res.friendIdList);\r\n}\r\n\r\n//returns Promise<UserModel>\r\nasync function getUsers() {\r\n    const data = (await api.get('/user/all')).data;\r\n    data.map(res => convertToUserModel(res));\r\n    return data;\r\n}\r\n\r\nasync function getUser() {\r\n    const res = (await api.get('/user')).data;\r\n    return convertToUserModel(res);\r\n}\r\n\r\nasync function signUp(userModel){\r\n    return await api.post('/user/add', userModel);\r\n}\r\n\r\nasync function login(email, password, remember_me){\r\n    const data = {username: email, password: password, 'remember-me': remember_me};\r\n    return await axios.post('http://localhost:8081/login', qs.stringify(data), {\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'}\r\n    });\r\n}\r\n\r\nasync function logout(){\r\n    return await axios.post('http://localhost:8081/logout');\r\n}\r\n\r\nasync function updateUser(userModel){\r\n    const res = (await api.put('/user', userModel)).data;\r\n    return convertToUserModel(res);\r\n}\r\n\r\nasync function deleteUser(){\r\n    await api.delete('/user')\r\n}\r\n\r\nlet exports = {\r\n    getUsers,\r\n    getUser,\r\n    signUp,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    deleteUser\r\n};\r\n\r\nexport default exports;","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function CitySelect(props) {\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"city-select-demo\"\r\n      sx={{ width: 220, margin: '0 auto'}}\r\n      options={props.cities}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.name}\r\n      onChange={(e, v) => props.onChange(v)}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={\"City\"}\r\n          variant={props.variant}\r\n          required\r\n          value={props.city}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function CountrySelect(props) {\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"country-select-demo\"\r\n      sx={{ width: 220, margin: '0 auto'}}\r\n      options={props.countries}\r\n      autoHighlight\r\n      value={props.country}\r\n      getOptionLabel={(option) => option.name}\r\n      onChange={(e, v) => props.onChange(v)}\r\n      renderOption={(props, option) => (\r\n        <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n          <img\r\n            loading=\"lazy\"\r\n            width=\"20\"\r\n            src={`https://flagcdn.com/w20/${option.iso2.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/w40/${option.iso2.toLowerCase()}.png 2x`}\r\n            alt=\"\"\r\n          />\r\n          {option.name} ({option.iso2})\r\n        </Box>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={\"Country\"}\r\n          variant={props.variant}\r\n          required\r\n          value={props.country}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function StateSelect(props) {\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"state-select-demo\"\r\n      sx={{ width: 220, margin: '0 auto'}}\r\n      options={props.states}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.name}\r\n      onChange={(e, v) => props.onChange(v)}\r\n      renderOption={(props, option) => (\r\n        <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n          {option.name} ({option.iso2})\r\n        </Box>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={\"State\"}\r\n          variant={props.variant}\r\n          required\r\n          value={props.state}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n          \r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport React from 'react'\r\nimport CitySelect from '../../_partials/selection/CitySelection';\r\nimport CountrySelect from '../../_partials/selection/CountrySelection';\r\nimport StateSelect from '../../_partials/selection/StateSelection';\r\n\r\nconst textFieldStyle = {\r\n    'margin': '10px'\r\n};\r\n\r\nconst IdentificationProcess = (props) => {\r\n  return (\r\n    <div>\r\n      <TextField\r\n          label=\"First Name\"\r\n          variant=\"filled\"\r\n          required\r\n          value={props.firstName}\r\n          onChange={e => props.updateFirstName(e.target.value)}\r\n          style={textFieldStyle}\r\n      /><br />\r\n      <TextField\r\n          label=\"Last Name\"\r\n          variant=\"filled\"\r\n          required\r\n          value={props.lastName}\r\n          onChange={e => props.updateLastName(e.target.value)}\r\n          style={textFieldStyle}\r\n      /><br />\r\n      <TextField\r\n          label=\"Age\"\r\n          variant=\"filled\"\r\n          type=\"number\"\r\n          required\r\n          value={props.age}\r\n          onChange={e => props.updateAge(e.target.value)}\r\n          style={textFieldStyle}\r\n      /><br />\r\n      <TextField\r\n          label=\"Email\"\r\n          variant=\"filled\"\r\n          type=\"email\"\r\n          required\r\n          value={props.email}\r\n          onChange={e => props.updateEmail(e.target.value)}\r\n          style={textFieldStyle}\r\n      /><br />\r\n      <TextField\r\n          label=\"Password\"\r\n          variant=\"filled\"\r\n          type=\"password\"\r\n          required\r\n          value={props.password}\r\n          onChange={e => props.updatePassword(e.target.value)}\r\n          style={textFieldStyle}\r\n      /><br />\r\n      <CountrySelect\r\n          label=\"Country\"\r\n          variant=\"filled\"\r\n          required\r\n          value={props.country}\r\n          onChange={props.updateCountry}\r\n          style={textFieldStyle}\r\n\r\n          countries={props.countries}\r\n      /><br />\r\n      <StateSelect\r\n          label=\"State\"\r\n          variant=\"filled\"\r\n          required\r\n          value={props.state}\r\n          onChange={props.updateState}\r\n          style={textFieldStyle}\r\n\r\n          states={props.states}\r\n      /><br />\r\n      <CitySelect\r\n          label=\"City\"\r\n          variant=\"filled\"\r\n          required\r\n          value={props.city}\r\n          onChange={props.updateCity}\r\n          style={textFieldStyle}\r\n        \r\n          cities={props.cities}\r\n      />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default IdentificationProcess;","import { TextField } from '@mui/material';\r\nimport React, { Component } from 'react'\r\n\r\nconst textFieldStyle = {\r\n    'margin': '10px'\r\n}\r\n\r\nclass ConfirmationProcess extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <TextField\r\n            label=\"Verification Code\"\r\n            variant=\"filled\"\r\n            type=\"code\"\r\n            required\r\n            value={this.props.verificationCode}\r\n            onChange={e => this.props.updateVerificationCode(e.target.value)}\r\n            style={textFieldStyle}\r\n        /><br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConfirmationProcess;\r\n","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function InterestSelect(props) {\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"interests-select\"\r\n      sx={{ width: 220, margin: '0 auto'}}\r\n      options={props.interestList}\r\n\r\n      autoHighlight={true}\r\n      freeSolo={true}\r\n      getOptionLabel={(option) => option}\r\n      onInputChange={props.onChange}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={props.label}\r\n          variant={props.variant}\r\n          required\r\n          value={props.value}\r\n          autoComplete={'off'}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n          onKeyDown={(k) => { if(k.key === 'Enter') props.onSubmit()}}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport React from 'react'\r\nimport { Chip, IconButton } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport InterestSelect from '../../_partials/selection/InterestSelection';\r\n\r\nconst textFieldStyle = {\r\n    margin: '10px'\r\n}\r\n\r\nconst AccountProcess = (props) => {\r\n\r\n    const [currentInterest, setCurrentInterest] = React.useState('');\r\n    return (\r\n      <div>\r\n        <TextField\r\n            label=\"Biography\"\r\n            variant=\"filled\"\r\n            type=\"text\"\r\n            required\r\n            value={props.biography}\r\n            onChange={e => props.updateBiography(e.target.value)}\r\n            style={textFieldStyle}\r\n        /><br />\r\n        <InterestSelect\r\n            label=\"Interest/Hobby\"\r\n            variant=\"filled\"\r\n            required\r\n            value={currentInterest}\r\n            onChange={(e, v) => setCurrentInterest(v)}\r\n            style={textFieldStyle}\r\n            onSubmit={() => {\r\n                props.updateInterests(new Set([...props.interests, currentInterest]));\r\n                setCurrentInterest('');\r\n            }}\r\n\r\n            interestList={[...props.interestList]}\r\n        />\r\n        <IconButton \r\n            //TODO add style\r\n            aria-label=\"add interest\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n                props.updateInterests(new Set([...props.interests, currentInterest]))\r\n                setCurrentInterest('');\r\n            }}\r\n        >\r\n            <AddIcon  />\r\n        </IconButton>\r\n        <br />\r\n        {\r\n            [...props.interests].map(o => {\r\n                let i = undefined;\r\n                if(o.id === undefined){\r\n                    i = o;\r\n                }else{\r\n                    i = {id: o, interest: o};\r\n                }\r\n                \r\n                return (\r\n                    <Chip key={i.id || i} style={{margin: '5px'}} label={i.interest || i} variant=\"outlined\" onDelete={() => {\r\n                        props.updateInterests(new Set([...props.interests].filter(interest => interest !== i)));\r\n                    }} />\r\n                )\r\n                })\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AccountProcess;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport IdentificationProcess from './process/IdentificationProcess';\r\nimport ConfirmationProcess from './process/ConfirmationProcess';\r\nimport AccountProcess from './process/AccountProcess';\r\nconst steps = ['Email Address', 'Email Confirmation', 'Account data'];\r\n\r\nexport default function SignupProcess(props) {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  \r\n  React.useEffect(() => {\r\n    setActiveStep(props.step || 0);\r\n  }, []);\r\n\r\n  const widgets = [<IdentificationProcess \r\n    firstName={props.firstName}\r\n    lastName={props.lastName}\r\n    email={props.email}\r\n    password={props.password}\r\n    age={props.age}\r\n    country={props.country}\r\n    state={props.state}\r\n    city={props.city}\r\n\r\n    updateFirstName={props.updateFirstName}\r\n    updateLastName={props.updateLastName}\r\n    updateEmail={props.updateEmail}\r\n    updatePassword={props.updatePassword}\r\n    updateAge={props.updateAge}\r\n    updateCountry={props.updateCountry}\r\n    updateState={props.updateState}\r\n    updateCity={props.updateCity}\r\n\r\n    countries={props.countries}\r\n    states={props.states}\r\n    cities={props.cities}\r\n  />, <ConfirmationProcess \r\n    verificationCode={props.verificationCode}\r\n    updateVerificationCode={props.updateVerificationCode}\r\n  />, <AccountProcess \r\n    biography={props.biography}\r\n    interests={props.interests}\r\n    \r\n    updateBiography={props.updateBiography}\r\n    updateInterests={props.updateInterests}\r\n\r\n    interestList={props.interestList}\r\n  />];\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    setActiveStep((prevActiveStep) => 2);\r\n  };\r\n\r\n  const nextFuncs = [\r\n    () => {\r\n        //send email to server, to be able to get verification code\r\n       \r\n        if(props.skipConf !== null && props.skipConf)\r\n          handleEnd();\r\n        else{\r\n          props.signup();\r\n          handleNext();\r\n        }\r\n    },\r\n    () => {\r\n        //send verification code to server, to be able to verify the account\r\n        \r\n        props.confirm();\r\n        //handleNext();\r\n    },\r\n    () => {\r\n        //send all data to server, to create account\r\n        props.updateSignup();\r\n    }\r\n  ];\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ margin: '20px' }}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const disabled = index === 1 && props.skipConf;\r\n\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if(disabled)\r\n            labelProps.optional = (<Typography variant=\"caption\">Disabled</Typography>);\r\n          return (\r\n            <Step key={label} {...stepProps} disabled={disabled}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === steps.length ? (\r\n        <React.Fragment>\r\n          <Typography sx={{ mt: 2, mb: 1 }}>\r\n            All steps completed - you&apos;re finished\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n            <Box sx={{ flex: '1 1 auto' }} />\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Box sx={{ mt: 2, mb: 1 }}>\r\n              {widgets[activeStep]}\r\n          </Box>\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n            <Button\r\n              color=\"inherit\"\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              sx={{ mr: 1 }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flex: '1 1 auto' }} />\r\n\r\n            <Button onClick={nextFuncs[activeStep]}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}"],"names":["UserModel","public_id","firstname","lastname","password","email","age","country","state","city","biography","interests","friendIdList","this","axios","api","baseURL","withCredentials","xsrfCookieName","xsrfHeaderName","defaults","headers","common","document","cookie","split","map","c","trim","filter","startsWith","replace","interceptors","response","use","err","undefined","status","window","location","href","console","log","getAllCountries","data","getStatesByCountry","ciso2","getCitiesByState","siso2","cscController","getAllInterests","exports","convertToUserModel","res","getUsers","getUser","signUp","userModel","login","remember_me","username","qs","logout","updateUser","deleteUser","CitySelect","props","Autocomplete","id","sx","width","margin","options","cities","autoHighlight","getOptionLabel","option","name","onChange","e","v","renderInput","params","TextField","label","variant","required","value","inputProps","autoComplete","CountrySelect","countries","renderOption","Box","component","mr","flexShrink","loading","src","iso2","toLowerCase","srcSet","alt","StateSelect","states","textFieldStyle","firstName","updateFirstName","target","style","lastName","updateLastName","type","updateAge","updateEmail","updatePassword","updateCountry","updateState","updateCity","ConfirmationProcess","verificationCode","updateVerificationCode","Component","InterestSelect","interestList","freeSolo","onInputChange","onKeyDown","k","key","onSubmit","React","currentInterest","setCurrentInterest","updateBiography","updateInterests","Set","IconButton","color","onClick","Add","o","i","interest","Chip","onDelete","steps","SignupProcess","activeStep","setActiveStep","step","widgets","nextFuncs","skipConf","prevActiveStep","signup","confirm","updateSignup","Stepper","index","disabled","labelProps","optional","Typography","Step","StepLabel","length","mt","mb","display","flexDirection","pt","flex","Button"],"sourceRoot":""}