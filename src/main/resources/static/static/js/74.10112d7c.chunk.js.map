{"version":3,"file":"static/js/74.10112d7c.chunk.js","mappings":"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","sources":["components/UpdateOwnProfilePage.js"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { ArrowBackIos } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CircularProgress, Typography } from '@mui/material';\r\nimport UserController from '../api/user/UserController';\r\nimport InterestController from '../api/interests/InterestsController';\r\nimport cscController from '../api/csc/CSC_Controller';\r\nimport UserModel from '../api/_models/User.datamodel';\r\nimport SignupProcess from './models/signup/SignupProcess';\r\n\r\nconst UpdateOwnProfilePage = () => {\r\n  const navigate = useNavigate();\r\n  return (<CUpdateOwnProfilePage navigate={navigate} />);\r\n}\r\n\r\nclass CUpdateOwnProfilePage extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      age: '',\r\n      country: {id: null, name: '', iso2: ''},\r\n      state: {id: null, name: '', iso2: ''},\r\n      city: {id: null, name: ''},\r\n      gender: '',\r\n      //confirmationToken: '',\r\n      biography: '',\r\n      interests: new Set(),\r\n\r\n      countries: [],\r\n      states: [],\r\n      cities: [],\r\n\r\n      interestList: new Set(),\r\n\r\n      loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    UserController.getUser().then(user => {\r\n      cscController.getAllCountries().then(countries => {\r\n        const user_country = countries.find(c => c.iso2 === user.country);\r\n        cscController.getStatesByCountry(user_country.iso2).then(states => {\r\n          const user_state = states.find(s => s.name === user.state);\r\n          cscController.getCitiesByState(user_country.iso2, user_state.iso2).then(cities => {\r\n            const user_city = cities.find(c => c.name === user.city);\r\n            console.log(user_country);\r\n            console.log(user_state);\r\n            console.log(user_city);\r\n            InterestController.getAllInterests().then(i => {\r\n              this.setState({\r\n                firstName: user.firstname,\r\n                lastName: user.lastname,\r\n                email: user.email,\r\n                password: user.password,\r\n                age: user.age,\r\n                country: user_country,\r\n                state: user_state,\r\n                city: user_city,\r\n                gender: user.gender,\r\n                confirmationToken: user.confirmationToken,\r\n                biography: user.biography,\r\n                interests: user.interests.map(interest => interest.interest),\r\n\r\n                countries: countries || [],\r\n                states: states,\r\n                cities: cities,\r\n                interestList: new Set(i.map(ist => ist.interest)) || new Set(),\r\n              \r\n                loaded: true,\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  refreshStates = (ciso) => {\r\n    cscController.getStatesByCountry(ciso).then(res => {\r\n      this.setState({states: res || []});\r\n    })\r\n  }\r\n\r\n  refreshCities = (ciso, siso) => {\r\n    cscController.getCitiesByState(ciso, siso).then(res => {\r\n      this.setState({cities: res || []});\r\n    })\r\n  }\r\n\r\n  updateFirstName = (_firstName) => {\r\n    this.setState({firstName: _firstName});\r\n  }\r\n  updateLastName = (_lastName) => {\r\n    this.setState({lastName: _lastName});\r\n  }\r\n  updateEmail = (_email) => {\r\n    this.setState({email: _email});\r\n  }\r\n  updatePassword = (_password) => {\r\n    this.setState({password: _password});\r\n  }\r\n  updateAge = (_age) => {\r\n    this.setState({age: _age});\r\n  }\r\n  updateCountry = (_country) => {\r\n    this.setState({country: _country});\r\n    if(_country != null)\r\n      this.refreshStates(_country.iso2);\r\n    else\r\n      this.setState({states: []})\r\n  }\r\n  updateState = (_state) => {\r\n    this.setState({state: _state});\r\n    if(_state != null)\r\n      this.refreshCities(this.state.country.iso2, _state.iso2);\r\n    else\r\n      this.setState({cities: []})\r\n  }\r\n  updateCity = (_city) => {\r\n    this.setState({city: _city});\r\n  }\r\n  updateGender = (_gender) => {\r\n    this.setState({gender: _gender});\r\n  }\r\n  updateBiography = (_biography) => {\r\n    this.setState({biography: _biography});\r\n  }\r\n  updateInterests = (_interests) => {\r\n    this.setState({interests: _interests});\r\n  }\r\n\r\n  updateSignup = () => {\r\n    const userModel = new UserModel(\r\n      null,\r\n      this.state.firstName,\r\n      this.state.lastName,\r\n      this.state.password,\r\n      this.state.email,\r\n      this.state.age,\r\n      this.state.country.iso2,\r\n      this.state.state.name,\r\n      this.state.city.name,\r\n      this.state.gender,\r\n      this.state.biography,\r\n      [...this.state.interests],\r\n      null\r\n    );\r\n    UserController.updateUser(userModel).then(() => {\r\n      this.props.navigate('/profile');\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n              onClick={() => this.props.navigate('/profile')}\r\n            >\r\n              <ArrowBackIos />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                Update your Profile\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n          {\r\n            this.state.loaded ? (\r\n            <SignupProcess \r\n              step={this.state.step}\r\n\r\n              updateSignup={this.updateSignup}\r\n\r\n              firstName={this.state.firstName}\r\n              lastName={this.state.lastName}\r\n              email={this.state.email}\r\n              password={this.state.password}\r\n              age={this.state.age}\r\n              country={this.state.country}\r\n              state={this.state.state}\r\n              city={this.state.city}\r\n              gender={this.state.gender}\r\n               \r\n              biography={this.state.biography}\r\n              interests={this.state.interests}\r\n\r\n              updateFirstName={this.updateFirstName}\r\n              updateLastName={this.updateLastName}\r\n              updateEmail={this.updateEmail}\r\n              updatePassword={this.updatePassword}\r\n              updateAge={this.updateAge}\r\n              updateCountry={this.updateCountry}\r\n              updateState={this.updateState}\r\n              updateCity={this.updateCity}\r\n              updateGender={this.updateGender}\r\n\r\n              updateBiography={this.updateBiography}\r\n              updateInterests={this.updateInterests}\r\n\r\n              countries={this.state.countries}\r\n              states={this.state.states}\r\n              cities={this.state.cities}\r\n              interestList={this.state.interestList}\r\n\r\n              skipConf={true}\r\n            />\r\n            ) : (\r\n            <CircularProgress sx={{marginTop: '1vh'}} />\r\n          )}\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdateOwnProfilePage;\r\n"],"names":["CUpdateOwnProfilePage","props","refreshStates","ciso","cscController","then","res","setState","states","refreshCities","siso","cities","updateFirstName","_firstName","firstName","updateLastName","_lastName","lastName","updateEmail","_email","email","updatePassword","_password","password","updateAge","_age","age","updateCountry","_country","country","iso2","updateState","_state","state","updateCity","_city","city","updateGender","_gender","gender","updateBiography","_biography","biography","updateInterests","_interests","interests","updateSignup","userModel","UserModel","name","UserController","navigate","catch","err","console","log","step","id","Set","countries","interestList","loaded","user","user_country","find","c","user_state","s","user_city","InterestController","i","firstname","lastname","confirmationToken","map","interest","ist","sx","flexGrow","position","size","edge","color","mr","onClick","variant","component","this","skipConf","marginTop","React","useNavigate"],"sourceRoot":""}